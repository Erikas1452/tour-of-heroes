@use "@angular/material" as mat;

/*
   * Implementation of themes
*/
@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @include set-material-style(themed("primary"), themed("secondary"));
      @content;
      $theme-map: null !global;
    }
  }
}

@mixin set-material-style($primary, $secondary) {
  @include mat.core();

  $custom-palette: (
    50: #c5cae9,
    100: $primary,
    200: #9fa8da,
    300: $secondary,
    400: #0a3d62,
    500: #0a3d62,
    600: #09375a,
    700: #072f50,
    800: #052746,
    900: #031a34,
    contrast: (
      50: rgba(black, 0.87),
      100: rgba(black, 0.87),
      200: rgba(black, 0.87),
      300: white,
    ),
  );

  $my-primary: mat.define-palette($custom-palette, 100);
  $my-accent: mat.define-palette($custom-palette, 300);

  $custom-theme: mat.define-light-theme(
    (
      color: (
        primary: $my-primary,
        accent: $my-accent,
      ),
    )
  );
  @include mat.all-component-themes($custom-theme);
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
